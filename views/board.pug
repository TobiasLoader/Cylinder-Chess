- function colourchangeyindex(col,y) {if (col=='w') return 8-y; else return y+1;}
- function colourchangexindex(col,x) {if (col=='w') return x; else return 7-x;}

mixin cylinderboard(mycolour)
	- let chessfiles = ['A','B','C','D','E','F','G','H'];
	- let ba = 2*Math.PI/8; // base angle
	- let rri = Math.cos(ba/2);
	- let cellconst = 2*Math.sin(ba/2);
	#cylinderarea(style=`--rri: ${rri}; --cellconst: ${cellconst}; --relativesize: 60px; --colw: rgb(210, 210, 210); --colb: rgb(100, 158, 141);`)
		#cylinder
			- for(let x = 0; x < 8; x+=1)
				- let endx = colourchangexindex(mycolour,x);
				.col(style=`--j: ${x/8};`)
					- for(let y = 0; y < 8; y+=1)
						- let endy = colourchangeyindex(mycolour,y);
						.cell(id=chessfiles[endx]+endy.toString())
							if (x==0)
								p.rankid !{endy}								
							if (y==7)
								p.fileid !{chessfiles[endx]}
		#wcapture
		#bcapture

mixin squareboard(mycolour)
	- let chessfiles = ['A','B','C','D','E','F','G','H'];
	#squarearea(style=`--relativesize: 60px; --colw: rgb(210, 210, 210); --colb: rgb(100, 158, 141);`)
		#square
			- for(let x = 0; x < 8; x+=1)
				- let endx = colourchangexindex(mycolour,x);
				.col
					- for(let y = 0; y < 8; y+=1)
						- let endy = colourchangeyindex(mycolour,y);
						.cell(id=chessfiles[endx]+endy.toString())
							if (x==0)
								p.rankid !{endy}								
							if (y==7)
								p.fileid !{chessfiles[endx]}
		#wcapture
		#bcapture

if (boardtype == 'cylinder')
	+cylinderboard(colour)
if (boardtype == 'square')
	+squareboard(colour)